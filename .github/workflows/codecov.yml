name: Generate test coverage xml report.
on: [push]
jobs:
    test-coverage:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2.3.1

            - name: Restore dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore

            - name: Test
              run: dotnet test --filter FullyQualifiedName!~IntegrationTests /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/ /p:Exclude=\"[*.Data]*,[*]*Exceptions.*\"

            - name: ReportGenerator
              uses: danielpalme/ReportGenerator-GitHub-Action@4.5.8
              with:
                  reports: "./tests/*.Tests/TestResults/coverage.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
                  targetdir: "./ReportGenerator" # REQUIRED # The directory where the generated report should be saved.
                  reporttypes: "Cobertura" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
                  verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off

            - name: Upload to Codecov
              uses: codecov/codecov-action@v1
              with:
                  files: ./ReportGenerator/Cobertura.xml
                  flags: unittests
                  name: codecov-umbrella
                  fail_ci_if_error: true
                  verbose: true
